# -*- coding: utf-8 -*-

"""
/***************************************************************************
 classe
                                 A QGIS plugin
 susceptibility
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2021-07-01
        copyright            : (C) 2021 by Giacomo Titti
        email                : giacomotitti@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'Giacomo Titti'
__date__ = '2021-07-01'
__copyright__ = '(C) 2021 by Giacomo Titti'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

import os
import sys
import inspect
from qgis.core import QgsApplication
from qgis.PyQt.QtCore import QSettings
from qgis.utils import iface,available_plugins,active_plugins
from .installer.installer import installer
from .utils import log,warn,load_env_file

cmd_folder = os.path.split(inspect.getfile(inspect.currentframe()))[0]

if cmd_folder not in sys.path:
    sys.path.insert(0, cmd_folder)


class classePlugin(object):

    def __init__(self):
        #self.settings = QgsSettings()
        #self.settings.beginGroup("SZ")
        self.provider = None
        dir=(os.path.dirname(os.path.abspath(__file__)))
        load_env_file(os.path.join(dir, ".env"))
        with open(dir+'/metadata.txt','r') as file:
            for line in file:
                if line.startswith('version='):
                    self.version = line.strip().split('version=')[1].strip()
        self.plugin_settings = QSettings("SZ", str(self.version))

    def initProcessing(self):
        from .sz_module_provider import classeProvider
        """Init Processing provider for QGIS >= 3.8."""
        self.provider = classeProvider()
        QgsApplication.processingRegistry().addProvider(self.provider)

    def initGui(self):
        self.installer=installer(self.version)
        print('Plugin already installed? ',self.plugin_settings.value("installed"))
        print('0')
        if os.environ.get('DEBUG')=='False':
            if self.installer.preliminay_req() is False:##rimuovere il commentooooo!!!!!!!!!!
                self.installer.unload()
                log(f"An error occured during the installation")
                raise RuntimeError("An error occured during the installation")
            else:
                print('1')
                if self.installer.requirements() is False:
                    self.installer.unload()
                    log(f"An error occured during the installation")
                    raise RuntimeError("An error occured during the installation")
                else:
                    print('2')
                    self.plugin_settings.setValue("installed", True)
                    self.initProcessing()     
        else:
            self.initProcessing()  

    def unload(self):
        QgsApplication.processingRegistry().removeProvider(self.provider)
        #self.installer.unload()




            
          